buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'

    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.example'
version = '1.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2020.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
// https://mvnrepository.com/artifact/com.h2database/h2
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.197'
    runtimeOnly 'com.h2database:h2'

    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'


    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'


    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
    implementation 'com.auth0:java-jwt:3.18.2'

    implementation 'org.springframework.cloud:spring-cloud-starter-config'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: '3.1.1'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.3'

    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //mysql
    runtimeOnly 'mysql:mysql-connector-java'

    //redis 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'

//querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"

    //https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui

    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'


    // prometheus 추가
    implementation 'io.micrometer:micrometer-registry-prometheus'


    //gson = json 파싱
    implementation 'com.google.code.gson:gson:2.8.6'

    //S3
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.1'

    //
    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.212'

    // https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
//querydsl 추가 시작
//querydsl q클래스 폴더
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl.doFirst {
    if (file(querydslDir).exists())
        delete(file(querydslDir))
}